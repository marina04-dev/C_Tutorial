/* exercise_2: advanced projects with pointers  */
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void double_space(int *pin,int *N);

void half_space(int *pin,int *N);

void fill(int *pin,int N, int start, int finish);

int main() {
    int *p;
    int N=4;
    int i, choice;
    
    srand(time(0));
    
    p = (int *)malloc(N*sizeof(int));
    if (!p) {
        printf("Error Allocating Memory");
        exit(0);
    }
    
    
    while(1) {
        printf("\nMenu: ");
        printf("\n1.Double-space the size of the array");
        printf("\n2.Half-space the size of the array");
        printf("\n3.Printing of the array");
        printf("\n4.Exit");
        printf("\nPlease enter your choice(1-4): ");
        scanf("%d",&choice);
        
        switch(choice) {
            case 1:
                double_space(p, &N);
                fill(p,N,N/2,N-1);
                printf("\nThe douplicate of the array has been done successfully!");
                break;
                
            case 2:
                half_space(p, &N);
                printf("\nThe decrease by half of the array has been done successfully!");
                break;
                
            case 3:
                for (i=0; i<N; i++) {
                    printf("%d",p[i]);
                }
                break;
                
            case 4:
                printf("Exit of the program");
                free(p);
                exit(0);
        }
    }
    
    
    for (i=0; i<N; i++) {
        p[i]=i;
    }
    
    double_space(p,&N);
    
    for (i=0; i<N; i++) {
        printf("%d",p[i]);
    }
    
    half_space(p,&N);
    
    for (i=0; i<N; i++) {
        printf("%d",p[i]);
    }
}


void double_space(int *pin,int *N) {
    *N=(*N)*2;
    
    pin=(int *)realloc(pin, *N);
    if (!pin) {
        printf("Error Allocating Memory");
        exit(0);
    }
}


void half_space(int *pin,int *N) {
    *N=(*N)/2;
    
    pin=(int *)realloc(pin, *N);
    if (!pin) {
        printf("Error Allocating Memory");
        exit(0);
    }
}


void fill(int *pin,int N, int start, int finish) {
    int i;
    
    if (start>=0 && start<=finish && finish<=N-1) {
        for (i=start; i<=finish; i++)
        pin[i] = rand()%100;
    }
}
